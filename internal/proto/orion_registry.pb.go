// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.2
// source: proto/orion_registry.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Event sent to all clients when a new orion client joined the network
type ClientNewOnNetworkEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendlyName string `protobuf:"bytes,1,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	PeerId       int64  `protobuf:"varint,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
}

func (x *ClientNewOnNetworkEvent) Reset() {
	*x = ClientNewOnNetworkEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orion_registry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientNewOnNetworkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientNewOnNetworkEvent) ProtoMessage() {}

func (x *ClientNewOnNetworkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orion_registry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientNewOnNetworkEvent.ProtoReflect.Descriptor instead.
func (*ClientNewOnNetworkEvent) Descriptor() ([]byte, []int) {
	return file_proto_orion_registry_proto_rawDescGZIP(), []int{0}
}

func (x *ClientNewOnNetworkEvent) GetFriendlyName() string {
	if x != nil {
		return x.FriendlyName
	}
	return ""
}

func (x *ClientNewOnNetworkEvent) GetPeerId() int64 {
	if x != nil {
		return x.PeerId
	}
	return 0
}

// Sent when a clients lost connection and needs to be completely kicked from the network.
type ClientDisconnectedTeardownEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendlyName string `protobuf:"bytes,1,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	PeerId       int64  `protobuf:"varint,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
}

func (x *ClientDisconnectedTeardownEvent) Reset() {
	*x = ClientDisconnectedTeardownEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orion_registry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientDisconnectedTeardownEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientDisconnectedTeardownEvent) ProtoMessage() {}

func (x *ClientDisconnectedTeardownEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orion_registry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientDisconnectedTeardownEvent.ProtoReflect.Descriptor instead.
func (*ClientDisconnectedTeardownEvent) Descriptor() ([]byte, []int) {
	return file_proto_orion_registry_proto_rawDescGZIP(), []int{1}
}

func (x *ClientDisconnectedTeardownEvent) GetFriendlyName() string {
	if x != nil {
		return x.FriendlyName
	}
	return ""
}

func (x *ClientDisconnectedTeardownEvent) GetPeerId() int64 {
	if x != nil {
		return x.PeerId
	}
	return 0
}

type RPCServerEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*RPCServerEvent_NewClient
	//	*RPCServerEvent_RemovedClient
	//	*RPCServerEvent_WantsToConnect
	//	*RPCServerEvent_WantsToConnectResponse
	Event isRPCServerEvent_Event `protobuf_oneof:"event"`
}

func (x *RPCServerEvent) Reset() {
	*x = RPCServerEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orion_registry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCServerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCServerEvent) ProtoMessage() {}

func (x *RPCServerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orion_registry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCServerEvent.ProtoReflect.Descriptor instead.
func (*RPCServerEvent) Descriptor() ([]byte, []int) {
	return file_proto_orion_registry_proto_rawDescGZIP(), []int{2}
}

func (m *RPCServerEvent) GetEvent() isRPCServerEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *RPCServerEvent) GetNewClient() *ClientNewOnNetworkEvent {
	if x, ok := x.GetEvent().(*RPCServerEvent_NewClient); ok {
		return x.NewClient
	}
	return nil
}

func (x *RPCServerEvent) GetRemovedClient() *ClientDisconnectedTeardownEvent {
	if x, ok := x.GetEvent().(*RPCServerEvent_RemovedClient); ok {
		return x.RemovedClient
	}
	return nil
}

func (x *RPCServerEvent) GetWantsToConnect() *ClientWantToConnectToClient {
	if x, ok := x.GetEvent().(*RPCServerEvent_WantsToConnect); ok {
		return x.WantsToConnect
	}
	return nil
}

func (x *RPCServerEvent) GetWantsToConnectResponse() *ClientWantToConnectToClientResponse {
	if x, ok := x.GetEvent().(*RPCServerEvent_WantsToConnectResponse); ok {
		return x.WantsToConnectResponse
	}
	return nil
}

type isRPCServerEvent_Event interface {
	isRPCServerEvent_Event()
}

type RPCServerEvent_NewClient struct {
	NewClient *ClientNewOnNetworkEvent `protobuf:"bytes,1,opt,name=new_client,json=newClient,proto3,oneof"`
}

type RPCServerEvent_RemovedClient struct {
	RemovedClient *ClientDisconnectedTeardownEvent `protobuf:"bytes,2,opt,name=removed_client,json=removedClient,proto3,oneof"`
}

type RPCServerEvent_WantsToConnect struct {
	WantsToConnect *ClientWantToConnectToClient `protobuf:"bytes,3,opt,name=wants_to_connect,json=wantsToConnect,proto3,oneof"`
}

type RPCServerEvent_WantsToConnectResponse struct {
	WantsToConnectResponse *ClientWantToConnectToClientResponse `protobuf:"bytes,4,opt,name=wants_to_connect_response,json=wantsToConnectResponse,proto3,oneof"`
}

func (*RPCServerEvent_NewClient) isRPCServerEvent_Event() {}

func (*RPCServerEvent_RemovedClient) isRPCServerEvent_Event() {}

func (*RPCServerEvent_WantsToConnect) isRPCServerEvent_Event() {}

func (*RPCServerEvent_WantsToConnectResponse) isRPCServerEvent_Event() {}

// Data sent by a client to initialize an orion membership session
type InitializeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendlyName    string `protobuf:"bytes,1,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	TimestampSigned int64  `protobuf:"varint,2,opt,name=timestamp_signed,json=timestampSigned,proto3" json:"timestamp_signed,omitempty"`
	Signed          []byte `protobuf:"bytes,3,opt,name=signed,proto3" json:"signed,omitempty"`
	MemberId        int64  `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Certificate     []byte `protobuf:"bytes,5,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *InitializeRequest) Reset() {
	*x = InitializeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orion_registry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest) ProtoMessage() {}

func (x *InitializeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orion_registry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest.ProtoReflect.Descriptor instead.
func (*InitializeRequest) Descriptor() ([]byte, []int) {
	return file_proto_orion_registry_proto_rawDescGZIP(), []int{3}
}

func (x *InitializeRequest) GetFriendlyName() string {
	if x != nil {
		return x.FriendlyName
	}
	return ""
}

func (x *InitializeRequest) GetTimestampSigned() int64 {
	if x != nil {
		return x.TimestampSigned
	}
	return 0
}

func (x *InitializeRequest) GetSigned() []byte {
	if x != nil {
		return x.Signed
	}
	return nil
}

func (x *InitializeRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *InitializeRequest) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

// Sent by the clients when wanting to initialize a new peer to peer request
type ClientWantToConnectToClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndpointAddr      string `protobuf:"bytes,1,opt,name=endpoint_addr,json=endpointAddr,proto3" json:"endpoint_addr,omitempty"`
	EndpointPort      uint32 `protobuf:"varint,2,opt,name=endpoint_port,json=endpointPort,proto3" json:"endpoint_port,omitempty"`
	PublicKey         []byte `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	PresharedKey      []byte `protobuf:"bytes,4,opt,name=preshared_key,json=presharedKey,proto3" json:"preshared_key,omitempty"`
	FriendlyName      string `protobuf:"bytes,5,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	DestinationPeerId int64  `protobuf:"varint,6,opt,name=destination_peer_id,json=destinationPeerId,proto3" json:"destination_peer_id,omitempty"`
	SourcePeerId      int64  `protobuf:"varint,7,opt,name=source_peer_id,json=sourcePeerId,proto3" json:"source_peer_id,omitempty"`
}

func (x *ClientWantToConnectToClient) Reset() {
	*x = ClientWantToConnectToClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orion_registry_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientWantToConnectToClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientWantToConnectToClient) ProtoMessage() {}

func (x *ClientWantToConnectToClient) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orion_registry_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientWantToConnectToClient.ProtoReflect.Descriptor instead.
func (*ClientWantToConnectToClient) Descriptor() ([]byte, []int) {
	return file_proto_orion_registry_proto_rawDescGZIP(), []int{4}
}

func (x *ClientWantToConnectToClient) GetEndpointAddr() string {
	if x != nil {
		return x.EndpointAddr
	}
	return ""
}

func (x *ClientWantToConnectToClient) GetEndpointPort() uint32 {
	if x != nil {
		return x.EndpointPort
	}
	return 0
}

func (x *ClientWantToConnectToClient) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *ClientWantToConnectToClient) GetPresharedKey() []byte {
	if x != nil {
		return x.PresharedKey
	}
	return nil
}

func (x *ClientWantToConnectToClient) GetFriendlyName() string {
	if x != nil {
		return x.FriendlyName
	}
	return ""
}

func (x *ClientWantToConnectToClient) GetDestinationPeerId() int64 {
	if x != nil {
		return x.DestinationPeerId
	}
	return 0
}

func (x *ClientWantToConnectToClient) GetSourcePeerId() int64 {
	if x != nil {
		return x.SourcePeerId
	}
	return 0
}

// Response to a ClientWantToConnectToClient
type ClientWantToConnectToClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndpointAddr      string `protobuf:"bytes,1,opt,name=endpoint_addr,json=endpointAddr,proto3" json:"endpoint_addr,omitempty"`
	EndpointPort      uint32 `protobuf:"varint,2,opt,name=endpoint_port,json=endpointPort,proto3" json:"endpoint_port,omitempty"`
	PublicKey         []byte `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	FriendlyName      string `protobuf:"bytes,4,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	DestinationPeerId int64  `protobuf:"varint,5,opt,name=destination_peer_id,json=destinationPeerId,proto3" json:"destination_peer_id,omitempty"`
	SourcePeerId      int64  `protobuf:"varint,6,opt,name=source_peer_id,json=sourcePeerId,proto3" json:"source_peer_id,omitempty"`
}

func (x *ClientWantToConnectToClientResponse) Reset() {
	*x = ClientWantToConnectToClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orion_registry_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientWantToConnectToClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientWantToConnectToClientResponse) ProtoMessage() {}

func (x *ClientWantToConnectToClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orion_registry_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientWantToConnectToClientResponse.ProtoReflect.Descriptor instead.
func (*ClientWantToConnectToClientResponse) Descriptor() ([]byte, []int) {
	return file_proto_orion_registry_proto_rawDescGZIP(), []int{5}
}

func (x *ClientWantToConnectToClientResponse) GetEndpointAddr() string {
	if x != nil {
		return x.EndpointAddr
	}
	return ""
}

func (x *ClientWantToConnectToClientResponse) GetEndpointPort() uint32 {
	if x != nil {
		return x.EndpointPort
	}
	return 0
}

func (x *ClientWantToConnectToClientResponse) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *ClientWantToConnectToClientResponse) GetFriendlyName() string {
	if x != nil {
		return x.FriendlyName
	}
	return ""
}

func (x *ClientWantToConnectToClientResponse) GetDestinationPeerId() int64 {
	if x != nil {
		return x.DestinationPeerId
	}
	return 0
}

func (x *ClientWantToConnectToClientResponse) GetSourcePeerId() int64 {
	if x != nil {
		return x.SourcePeerId
	}
	return 0
}

type RPCClientEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*RPCClientEvent_Initialize
	//	*RPCClientEvent_Connect
	//	*RPCClientEvent_ConnectResponse
	Event isRPCClientEvent_Event `protobuf_oneof:"event"`
}

func (x *RPCClientEvent) Reset() {
	*x = RPCClientEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orion_registry_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCClientEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCClientEvent) ProtoMessage() {}

func (x *RPCClientEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orion_registry_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCClientEvent.ProtoReflect.Descriptor instead.
func (*RPCClientEvent) Descriptor() ([]byte, []int) {
	return file_proto_orion_registry_proto_rawDescGZIP(), []int{6}
}

func (m *RPCClientEvent) GetEvent() isRPCClientEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *RPCClientEvent) GetInitialize() *InitializeRequest {
	if x, ok := x.GetEvent().(*RPCClientEvent_Initialize); ok {
		return x.Initialize
	}
	return nil
}

func (x *RPCClientEvent) GetConnect() *ClientWantToConnectToClient {
	if x, ok := x.GetEvent().(*RPCClientEvent_Connect); ok {
		return x.Connect
	}
	return nil
}

func (x *RPCClientEvent) GetConnectResponse() *ClientWantToConnectToClientResponse {
	if x, ok := x.GetEvent().(*RPCClientEvent_ConnectResponse); ok {
		return x.ConnectResponse
	}
	return nil
}

type isRPCClientEvent_Event interface {
	isRPCClientEvent_Event()
}

type RPCClientEvent_Initialize struct {
	// First message sent to the server in order to initialize the stream status.
	Initialize *InitializeRequest `protobuf:"bytes,1,opt,name=initialize,proto3,oneof"`
}

type RPCClientEvent_Connect struct {
	// Sent when the clients wants to connect to a new client
	Connect *ClientWantToConnectToClient `protobuf:"bytes,2,opt,name=connect,proto3,oneof"`
}

type RPCClientEvent_ConnectResponse struct {
	ConnectResponse *ClientWantToConnectToClientResponse `protobuf:"bytes,3,opt,name=connect_response,json=connectResponse,proto3,oneof"`
}

func (*RPCClientEvent_Initialize) isRPCClientEvent_Event() {}

func (*RPCClientEvent_Connect) isRPCClientEvent_Event() {}

func (*RPCClientEvent_ConnectResponse) isRPCClientEvent_Event() {}

var File_proto_orion_registry_proto protoreflect.FileDescriptor

var file_proto_orion_registry_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x17,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x77, 0x4f, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x65, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x1f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x65, 0x61, 0x72, 0x64,
	0x6f, 0x77, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x22, 0xcc, 0x02, 0x0a, 0x0e, 0x52, 0x50, 0x43, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x6e, 0x65, 0x77,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x77, 0x4f, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x49, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x54, 0x65, 0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x48, 0x0a, 0x10, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x57, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54,
	0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x77, 0x61, 0x6e, 0x74, 0x73,
	0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x61, 0x0a, 0x19, 0x77, 0x61, 0x6e,
	0x74, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x16, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x22, 0xa6, 0x02, 0x0a, 0x1b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x6e,
	0x74, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x72, 0x65, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79,
	0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x22, 0x89, 0x02, 0x0a, 0x23,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x22, 0xdc, 0x01, 0x0a, 0x0e, 0x52, 0x50, 0x43, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x12, 0x38, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x6e, 0x74, 0x54, 0x6f,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x51, 0x0a, 0x10, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x6e,
	0x74, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x32, 0x45, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x12, 0x39, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54,
	0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0f, 0x2e, 0x52, 0x50, 0x43, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x0f, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x28, 0x01, 0x30, 0x01, 0x42, 0x09, 0x5a,
	0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_orion_registry_proto_rawDescOnce sync.Once
	file_proto_orion_registry_proto_rawDescData = file_proto_orion_registry_proto_rawDesc
)

func file_proto_orion_registry_proto_rawDescGZIP() []byte {
	file_proto_orion_registry_proto_rawDescOnce.Do(func() {
		file_proto_orion_registry_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_orion_registry_proto_rawDescData)
	})
	return file_proto_orion_registry_proto_rawDescData
}

var file_proto_orion_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_orion_registry_proto_goTypes = []interface{}{
	(*ClientNewOnNetworkEvent)(nil),             // 0: ClientNewOnNetworkEvent
	(*ClientDisconnectedTeardownEvent)(nil),     // 1: ClientDisconnectedTeardownEvent
	(*RPCServerEvent)(nil),                      // 2: RPCServerEvent
	(*InitializeRequest)(nil),                   // 3: InitializeRequest
	(*ClientWantToConnectToClient)(nil),         // 4: ClientWantToConnectToClient
	(*ClientWantToConnectToClientResponse)(nil), // 5: ClientWantToConnectToClientResponse
	(*RPCClientEvent)(nil),                      // 6: RPCClientEvent
}
var file_proto_orion_registry_proto_depIdxs = []int32{
	0, // 0: RPCServerEvent.new_client:type_name -> ClientNewOnNetworkEvent
	1, // 1: RPCServerEvent.removed_client:type_name -> ClientDisconnectedTeardownEvent
	4, // 2: RPCServerEvent.wants_to_connect:type_name -> ClientWantToConnectToClient
	5, // 3: RPCServerEvent.wants_to_connect_response:type_name -> ClientWantToConnectToClientResponse
	3, // 4: RPCClientEvent.initialize:type_name -> InitializeRequest
	4, // 5: RPCClientEvent.connect:type_name -> ClientWantToConnectToClient
	5, // 6: RPCClientEvent.connect_response:type_name -> ClientWantToConnectToClientResponse
	6, // 7: Registry.SubscribeToStream:input_type -> RPCClientEvent
	2, // 8: Registry.SubscribeToStream:output_type -> RPCServerEvent
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_proto_orion_registry_proto_init() }
func file_proto_orion_registry_proto_init() {
	if File_proto_orion_registry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_orion_registry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientNewOnNetworkEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orion_registry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientDisconnectedTeardownEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orion_registry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCServerEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orion_registry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orion_registry_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientWantToConnectToClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orion_registry_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientWantToConnectToClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orion_registry_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCClientEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_orion_registry_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*RPCServerEvent_NewClient)(nil),
		(*RPCServerEvent_RemovedClient)(nil),
		(*RPCServerEvent_WantsToConnect)(nil),
		(*RPCServerEvent_WantsToConnectResponse)(nil),
	}
	file_proto_orion_registry_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*RPCClientEvent_Initialize)(nil),
		(*RPCClientEvent_Connect)(nil),
		(*RPCClientEvent_ConnectResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_orion_registry_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_orion_registry_proto_goTypes,
		DependencyIndexes: file_proto_orion_registry_proto_depIdxs,
		MessageInfos:      file_proto_orion_registry_proto_msgTypes,
	}.Build()
	File_proto_orion_registry_proto = out.File
	file_proto_orion_registry_proto_rawDesc = nil
	file_proto_orion_registry_proto_goTypes = nil
	file_proto_orion_registry_proto_depIdxs = nil
}
